

## ls 的用法


| 序号 | 命令 | 描述 | 备注 |
| --- | --- | --- | --- |
| 1 | `ls -lR /home/dir/` | 列出 `/home/dir/` 目录下所有的文件及目录的详细资料 | `-l` 是以列表的形式显示结果；`-R` 意思是递归处理，将指定目录下的所有文件及子目录一并处理。 |
| 2 | `ls -l /home/dir/p*` | 列出 `/home/dir/` 目录下以p开头的所有文件的详细内容 |  |
| 3 | `ls -F /home/dir/ | grep "/$"` | 列出 `/home/dir/` 目录下的子目录 | 其中：`-F` 选项表示在每个文件名后附上一个字符以说明该文件的类型。`*`：表示可执行的普通文件；`/`：表示目录；`@`：表示符号链接；`|`：表示FIFOs；`=`：表示套接字。`"/$"` 其实是一个正则表达式，表示以 `/` 结尾。`grep "/$"` 表示过滤出以 `/` 结尾的结果，也就是子目录。| 
| 4 | `ls -p /home/dir/ | grep "/$"` | 列出 `/home/dir/` 目录下的子目录 | `-p` 和 `-F` 选项类似，也是在每个文件名后附上一个字符以说明该文件的类型。用法同上 `3` |
| 5 | `ls -l /home/dir/ | grep "^d"` | 列出 `/home/dir/` 目录下的子目录 | 其中：`"^d"`也是一个正则表达式，表示以 `d` 开头。`grep "^d"` 表示过滤出以 `d`开头的结果，而 `ls -l` 所列出的结果，首位如果是 `d` 的话，表示这个文件是个目录，这样就可以过滤出子目录了。 |
| 6 | `ls -d */` | 列出当前目录下的子目录 | 其中：`-d` 选项表示将目录像文件一样显示，而不显示其下的文件。 |
| 7 | `ls -ltr` | 按时间顺序列出目录下的文件，越新越排后面 | 其中：`-t` 选项表示以文件修改时间排序，越新的越靠前。`-r`选项表示对结果进行反向排序，二者结合的话表示以修改时间排序，越新的越靠后。| 
| 8 | `ls -lhS` | 以文件大小进行排序 | 其中：`-h`选项表示以可读选项显示，否则文件大小是默认以字节数显示，比如：4873字节，你知道是多少吗？加了 '-h'选项系统就帮你换算成以 `k` 或者其他单位的结果。`-S` 选项表示以文件大小进行排序，文件越大越靠前。想要文件小的靠前的话，加个 `-r` 就行。 |
| 9 | `ls -l | grep "^-" | wc -l` | 统计当前目录下的文件数 | 其中：`"^-"` 表示以 `-` 开头，即普通文件，`ls -l | grep "^-"` 过滤出普通文件，再用 `wc -l` 统计过滤出的普通文件的个数。 |
| 10 | `ls -l | grep "^d" | wc -l` | 统计当前目录下的目录数 | 其中：`"^d"` 表示以 `d` 开头，即目录，`ls -l | grep "^d"` 过滤出目录，再用 `wc -l` 统计过滤出的目录的个数。 |
| 11 | `ls | sed "s:^:`\`pwd\``/:"` | 列出所有文件的绝对路径 | 其中：`sed "s:^:`\`pwd\``/:"` 表示在行首增加 `\`pwd\``（即文件所在路径），与文件名组合成绝对路径。 |
| 12 | `find $PWD -maxdepth 1 | xargs ls -ld` | 列出当前目录下的所有文件（包括隐藏文件）的绝对路径，对目录不做递归，在上一个用法里（`11`），对于隐藏文件（即以`.`开头的文件）是不做处理的，如果我们需要对隐藏文件也做处理的话，就需要使用下面这个命令：`find $PWD -maxdepth 1 | xargs ls -ld` | 其中：`find $PWD -maxdepth 1`限定了在当前层级（即不递归），再对`find`结果传递给`ls -ld`做参数，这样就将当前目录下的所有文件补齐了所在路径 | 



## wc 的用法

`wc(world count)` 是一个统计文件字词，字节，行数的命令，它可以帮我们非常方便的统计以上信息。

主要参数

常见参数如下：

- `-c` 统计字节数。
- `-l` 统计行数。
- `-m` 统计字符数。这个标志不能与 `-c` 标志一起使用。
- `-w` 统计字数。注意，这里的字指的是由空格，换行符等分隔的字符串。


> 要特别提醒的是，这里的词是以空格，换行符等分隔开的字符串


我们接下来直接看几个实例。统计文件行数，词数和字节数

仅统计单项内容时，仅需要带上对应的参数即可，例如：

```
wc -l readme.txt
```

输出结果

```
51 readme.txt
```

> 使用 -l 参数，使得只显示行数。

但是这里特别要注意的是字符数和字节数的区别。字节数是数据占用的空间大小，而一个字符可能占多个字节，

> 例如，UTF-8 编码中，一个英文字母就是一个字符，占用空间一个字节，而一个中文，则占用3字节大小。



编程，在这里是两个字符，而占用空间是6字节，但是使用 `wc -m` 统计会比两个多一个，是3个字符。


各编码字符占用字符情况如下：

**编码英文字母中文UTF-8 1 字符 3 字节 Unicode 1 字符 2 字节**


你可以使用：

```
$ echo $LANGen_GB.UTF-8
```

查看编码格式。


`|` 是管道符，`ls -l|wc -l` 表示将 `ls -l` 的结果传给 `wc` 命令处理

`grep` 用于文本查找，`grep "a"`，表明查找包含 `a` 的行，而 `grep -v "b"`，表明过滤包含 b 的行。